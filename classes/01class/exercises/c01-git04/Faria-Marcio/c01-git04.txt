--Commands

$ touch my_env.txt
$ echo -e "SERVICE_NAME=account-management \nENVIRONMENT=prod \nPASSWORD=pass1234" >> my_env.txt
$ git add my_env.txt
$ git commit -m "Working with passwords"
$ git log


--Questions:

1) Let's suppose you remotely pushed your my_env.txt file. A colleague asks you to remove this information from Git. What's your colleague worried about?
   Confidential/sensitive information as passwords or environment settings should not be available in a working repo where the whole team have access. These sort of information must be kept safe in a folder with limited access.

2) If you modify the file in your workspace, then push it, will it be enough? (It's not). Why?
   No, because the sensitive information (password) would still be accessable through the log/version.

3) If you delete the file and push it, then create a new one with the rest of the information, is it enough? (It's not). Why?
   No, it would be the same situation as answer for question 2.

4) How to fix this? How do you remove something from Git history?
   Removing it from Git history using git filter-branch command or git reflog and gc.

5) Which commands would you use? What are the consequences for other developers?
   I would use git reflog and git gc:
   $ git reflog expire --expire=now --all
   $ git gc --prune=now

   By doing that the file becomes inaccesible.
   The consequences would be ask to other developers to reset their branchs to yours.
