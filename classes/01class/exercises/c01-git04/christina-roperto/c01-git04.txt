Questions

Create a file c01-git04-1.txt answering the questions below. Include details and commands used.

Let's suppose you remotely pushed your my_env.txt file. A colleague asks you to remove this information from Git. What's your colleague worried about?
-  He/she is worried that the file contains passcode might be compromised as there are bots that search for sensitive information.

If you modify the file in your workspace, then push it, will it be enough? (It's not). Why?
- no, because you can still access the previous commit with git log

If you delete the file and push it, then create a new one with the rest of the information, is it enough? (It's not). Why?
- no, you can still access the the deleted file using git log if you have the hash object

How to fix this? How do you remove something from Git history?
- It's difficult to remove something from Git history even using reset/rebase. You can use git gc to remove the unreachable objects. 

Which commands would you use? What are the consequences for other developers?
Copied from my c01-git03 exercise
- You can remove it by typing these commands:
``` 
git reflog expire --expire=now --all
git gc --prune=now 
```

reflog contains information about the old state of branches and allows you to go back to that state if necessary while gc removes unreachable objects like commits, files, etc. By expiring everything of reflog and prune the gc now, you can make the files truly unreachable.
However, if the files are cloned by some bots or other people, you might not be able to remove them completely from Git history. 

The consequences for other developers are that their branch will have a different history from your branch and they might get conflicts when merging with your branch. They will need to reset their branch to yours and it might make it harder to apply the changes they made. 