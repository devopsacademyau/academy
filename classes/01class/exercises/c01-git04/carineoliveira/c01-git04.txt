Class 01 - Exercicio Git 04

1. Let's suppose you remotely pushed your my_env.txt file. A colleague asks you to remove this information from Git. What's your colleague worried about?
He is worried because confidential/sensitive information has been shared into a repository.
In this case the credentials to access a production environment. 

2. If you modify the file in your workspace, then push it, will it be enough? (It's not). Why?
No, because the previous file will be logged in the history log and can be restored.

3. If you delete the file and push it, then create a new one with the rest of the information, is it enough? (It's not). Why?
No, same as before, it will still available on the history log.

4. How to fix this? How do you remove something from Git history?
- To remove the file from git history use the following command:
git filter-branch --index-filter "git rm -rf --cached --ignore-unmatch path_to_file" HEAD
- then:
git push origin 

5. Which commands would you use? What are the consequences for other developers?
Use the commands above or additionally use the command "git rebase -i HEAD~<number_of_commits_to_right_back>".


Other developers would have to rebase their local branchs with the latest changes.
Make sure the sensitive information is not available in their repository. 
Otherwise they will push it again to the repository.