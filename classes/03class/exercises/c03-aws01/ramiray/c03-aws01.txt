Steps involved in creating auto scaling group using CLI.

Below resources are used in this exercise. 

1. VPC - devopsacademy-vpc (vpc-0351acfbc7aed9c1f) (created in previous exercise)
2. Public Subnets:
    public a - subnet-04c9d82c36567dcc6
    public b - subnet-0ad9dc31135c0f2d8

3. Create Security Group : 

$ aws ec2 create-security-group --group-name my-devopssg --description "My security group" --vpc-id vpc-0351acfbc7aed9c1f
{
    "GroupId": "sg-04c7c173261c8c2c1"
}

$ aws ec2 authorize-security-group-ingress --group-id sg-04c7c173261c8c2c1 --protocol tcp --port 80 --cidr 0.0.0.0/0

$ aws ec2 describe-security-groups --group-ids sg-04c7c173261c8c2c1

{
    "SecurityGroups": [
        {
            "IpPermissionsEgress": [
                {
                    "IpProtocol": "-1",
                    "PrefixListIds": [],
                    "IpRanges": [
                        {
                            "CidrIp": "0.0.0.0/0"
                        }
                    ],
                    "UserIdGroupPairs": [],
                    "Ipv6Ranges": []
                }
            ],
            "Description": "My security group",
            "IpPermissions": [
                {
                    "PrefixListIds": [],
                    "FromPort": 80,
                    "IpRanges": [
                        {
                            "CidrIp": "0.0.0.0/0"
                        }
                    ],
                    "ToPort": 80,
                    "IpProtocol": "tcp",
                    "UserIdGroupPairs": [],
                    "Ipv6Ranges": []
                }
            ],
            "GroupName": "my-devopssg",
            "VpcId": "vpc-0351acfbc7aed9c1f",
            "OwnerId": "348662207501",
            "GroupId": "sg-04c7c173261c8c2c1"
        }
    ]
}

4. Create a file named ramyadevops-userdata.txt with the following content. 
#! /bin/bash
yum update -y
yum install -y httpd
curl 169.254.169.254/latest/meta-data/hostname > index.html
mv index.html /var/www/html/
systemctl start httpd

5. Create the launch config for the Autoscaling group :

 aws autoscaling create-launch-configuration \
 --launch-configuration-name ramya-launch-config \
 --key-name Devopsacademy --image-id ami-0a58e22c727337c51 \
 --security-groups sg-04c7c173261c8c2c1 --instance-type t2.nano \
 --user-data file://ramyadevops-userdata.txt    --associate-public-ip-address 

6. Create Autoscaling group.

  aws autoscaling create-auto-scaling-group \
    --auto-scaling-group-name ramya-asg \
    --launch-configuration-name ramya-launch-config \
    --min-size 1 --max-size 2 --desired-capacity 2 \
    --health-check-grace-period 120 \
    --vpc-zone-identifier "subnet-04c9d82c36567dcc6, subnet-0ad9dc31135c0f2d8"


$ aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name ramya-asg
{
    "AutoScalingGroups": [
        {
            "AutoScalingGroupARN": "arn:aws:autoscaling:ap-southeast-2:348662207501:autoScalingGroup:8440b1bd-7522-41d1-bb47-c27c363d5433:autoScalingGroupName/ramya-asg",
            "ServiceLinkedRoleARN": "arn:aws:iam::348662207501:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "TargetGroupARNs": [],
            "SuspendedProcesses": [],
            "DesiredCapacity": 2,
            "Tags": [],
            "EnabledMetrics": [],
            "LoadBalancerNames": [],
            "AutoScalingGroupName": "ramya-asg",
            "DefaultCooldown": 300,
            "MinSize": 1,
            "Instances": [
                {
                    "ProtectedFromScaleIn": false,
                    "AvailabilityZone": "ap-southeast-2b",
                    "InstanceId": "i-09fee876e84ebb49a",
                    "HealthStatus": "Healthy",
                    "LifecycleState": "Pending",
                    "LaunchConfigurationName": "ramya-launch-config"
                },
                {
                    "ProtectedFromScaleIn": false,
                    "AvailabilityZone": "ap-southeast-2a",
                    "InstanceId": "i-0e31255fd1104b955",
                    "HealthStatus": "Healthy",
                    "LifecycleState": "Pending",
                    "LaunchConfigurationName": "ramya-launch-config"
                }
            ],
            "MaxSize": 2,
            "VPCZoneIdentifier": "subnet-04c9d82c36567dcc6,subnet-0ad9dc31135c0f2d8",
            "HealthCheckGracePeriod": 120,
            "TerminationPolicies": [
                "Default"
            ],
            "LaunchConfigurationName": "ramya-launch-config",
            "CreatedTime": "2020-07-09T04:02:45.308Z",
            "AvailabilityZones": [
                "ap-southeast-2b",
                "ap-southeast-2a"
            ],
            "HealthCheckType": "EC2",
            "NewInstancesProtectedFromScaleIn": false
        }
    ]
}

Questions:

1. Output:

a. http://54.252.217.112/
   ip-172-16-98-42.ap-southeast-2.compute.internal

b  http://52.63.85.210/
   ip-172-16-40-186.ap-southeast-2.compute.internal

2. Curl Command: 

curl https://169.254.169.254/latest/meta-data/hostname > index.html

This command retrieves the local hostname from the instance metadata and add to the index.html 



   




