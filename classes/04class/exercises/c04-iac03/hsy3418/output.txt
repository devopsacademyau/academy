
An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.nateip will be created
  + resource "aws_eip" "nateip" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + vpc               = true
    }

  # aws_internet_gateway.devopsad-igw will be created
  + resource "aws_internet_gateway" "devopsad-igw" {
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "devopsad-igw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.devopsad-ngw will be created
  + resource "aws_nat_gateway" "devopsad-ngw" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "gw NAT"
        }
    }

  # aws_route_table.devopsad-igw-route will be created
  + resource "aws_route_table" "devopsad-igw-route" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = (known after apply)
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = ""
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "devopsad-igw-route"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table.devopsad-ngw-route will be created
  + resource "aws_route_table" "devopsad-ngw-route" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = (known after apply)
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = ""
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "devopsad-ngw-route"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.private-a-subnet-association will be created
  + resource "aws_route_table_association" "private-a-subnet-association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.private-b-subnet-association will be created
  + resource "aws_route_table_association" "private-b-subnet-association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public-a-subnet-association will be created
  + resource "aws_route_table_association" "public-a-subnet-association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public-b-subnet-association will be created
  + resource "aws_route_table_association" "public-b-subnet-association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_subnet.private-a will be created
  + resource "aws_subnet" "private-a" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.2.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "private-a"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.private-b will be created
  + resource "aws_subnet" "private-b" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.3.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "private-b"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public-a will be created
  + resource "aws_subnet" "public-a" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.0.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "public-a"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public-b will be created
  + resource "aws_subnet" "public-b" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.1.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "public-b"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.devopsvpc will be created
  + resource "aws_vpc" "devopsvpc" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.0.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = true
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
    }

Plan: 14 to add, 0 to change, 0 to destroy.


Warning: Quoted type constraints are deprecated

  on variables.tf line 1, in variable "subnets_cidrs":
   1: variable "subnets_cidrs" { type = "map" }

Terraform 0.11 and earlier required type constraints to be given in quotes,
but that form is now deprecated and will be removed in a future version of
Terraform. To silence this warning, remove the quotes around "map" and write
map(string) instead to explicitly indicate that the map elements are strings.

(and one more similar warning elsewhere)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_eip.nateip: Creating...
aws_vpc.devopsvpc: Creating...
aws_eip.nateip: Creation complete after 1s [id=eipalloc-0e6fd6652021e8ef7]
aws_vpc.devopsvpc: Creation complete after 3s [id=vpc-032ad2f95155dd7b3]
aws_subnet.public-a: Creating...
aws_internet_gateway.devopsad-igw: Creating...
aws_subnet.private-a: Creating...
aws_subnet.private-b: Creating...
aws_subnet.public-b: Creating...
aws_subnet.private-a: Creation complete after 2s [id=subnet-03f8a47fe8130be33]
aws_subnet.private-b: Creation complete after 2s [id=subnet-06577ec9b28650578]
aws_nat_gateway.devopsad-ngw: Creating...
aws_internet_gateway.devopsad-igw: Creation complete after 2s [id=igw-072e6b74fefa33f5f]
aws_route_table.devopsad-igw-route: Creating...
aws_subnet.public-b: Creation complete after 2s [id=subnet-0936736d9cc925594]
aws_subnet.public-a: Creation complete after 2s [id=subnet-013c0dbd16d00730f]
aws_route_table.devopsad-igw-route: Creation complete after 2s [id=rtb-0c56276c2351a85b5]
aws_route_table_association.public-a-subnet-association: Creating...
aws_route_table_association.public-b-subnet-association: Creating...
aws_route_table_association.public-b-subnet-association: Creation complete after 0s [id=rtbassoc-01c48ad91b6c50346]
aws_route_table_association.public-a-subnet-association: Creation complete after 0s [id=rtbassoc-036b13eb87981210f]
aws_nat_gateway.devopsad-ngw: Still creating... [10s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [20s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [30s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [40s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [50s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [1m0s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [1m10s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [1m20s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [1m30s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [1m40s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [1m50s elapsed]
aws_nat_gateway.devopsad-ngw: Still creating... [2m0s elapsed]
aws_nat_gateway.devopsad-ngw: Creation complete after 2m1s [id=nat-0fafa116d89419814]
aws_route_table.devopsad-ngw-route: Creating...
aws_route_table.devopsad-ngw-route: Creation complete after 1s [id=rtb-0be2ff23307fb0a40]
aws_route_table_association.private-b-subnet-association: Creating...
aws_route_table_association.private-a-subnet-association: Creating...
aws_route_table_association.private-b-subnet-association: Creation complete after 1s [id=rtbassoc-0ad1a54529e5203d5]
aws_route_table_association.private-a-subnet-association: Creation complete after 1s [id=rtbassoc-098c1737657862d6c]

Apply complete! Resources: 14 added, 0 changed, 0 destroyed.

Outputs:

subnet-private-a-cidr = 10.0.2.0/24
subnet-private-b-cidr = 10.0.3.0/24
subnet-public-a-cidr = 10.0.0.0/24
subnet-public-b-cidr = 10.0.1.0/24
vpc_cidr = 10.0.0.0/16