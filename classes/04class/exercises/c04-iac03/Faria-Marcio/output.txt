Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

aws_eip.main: Refreshing state... [id=eipalloc-0513b2ac455c3ca89]
aws_vpc.devopsacademy-vpc-iac: Refreshing state... [id=vpc-098eadb6edfa21315]
aws_internet_gateway.devopsacademy-igw-iac: Refreshing state... [id=igw-0dbfcd66885bfd101]
aws_subnet.public[1]: Refreshing state... [id=subnet-001f5161a76bcb2a6]
aws_subnet.public[0]: Refreshing state... [id=subnet-0c4500544b1a8d64d]
aws_subnet.private[0]: Refreshing state... [id=subnet-003eb7bec2105b73a]
aws_subnet.private[1]: Refreshing state... [id=subnet-0357bc1bdea4baf58]
aws_route_table.devopsacademy-rt-public-iac: Refreshing state... [id=rtb-08d93b0c4df976841]
aws_nat_gateway.devopsacademy-ngw-iac: Refreshing state... [id=nat-0a1e007645db1ba91]
aws_route_table_association.rt_igw_iac[0]: Refreshing state... [id=rtbassoc-065615003993ea076]
aws_route_table_association.rt_igw_iac[1]: Refreshing state... [id=rtbassoc-0d0ab218b06d7a494]
aws_route_table.devopsacademy-rt-private-iac: Refreshing state... [id=rtb-009f1951a978975c6]
aws_route_table_association.rt_ngw_iac[0]: Refreshing state... [id=rtbassoc-09d23b38e9f1a2d55]
aws_route_table_association.rt_ngw_iac[1]: Refreshing state... [id=rtbassoc-0ae7b3690f921d29d]

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  ~ update in-place
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # aws_internet_gateway.devopsacademy-igw-iac will be updated in-place
  ~ resource "aws_internet_gateway" "devopsacademy-igw-iac" {
        id       = "igw-0dbfcd66885bfd101"
        owner_id = "148446344264"
        tags     = {
            "Name" = "IGW IaC"
        }
      ~ vpc_id   = "vpc-098eadb6edfa21315" -> (known after apply)
    }

  # aws_nat_gateway.devopsacademy-ngw-iac must be replaced
-/+ resource "aws_nat_gateway" "devopsacademy-ngw-iac" {
        allocation_id        = "eipalloc-0513b2ac455c3ca89"
      ~ id                   = "nat-0a1e007645db1ba91" -> (known after apply)
      ~ network_interface_id = "eni-0b73e8080e570d2ca" -> (known after apply)
      ~ private_ip           = "10.0.1.59" -> (known after apply)
      ~ public_ip            = "3.105.49.166" -> (known after apply)
      ~ subnet_id            = "subnet-003eb7bec2105b73a" -> (known after apply) # forces replacement
        tags                 = {
            "Name" = "NGW IaC"
        }
    }

  # aws_route_table.devopsacademy-rt-private-iac must be replaced
-/+ resource "aws_route_table" "devopsacademy-rt-private-iac" {
      ~ id               = "rtb-009f1951a978975c6" -> (known after apply)
      ~ owner_id         = "148446344264" -> (known after apply)
      ~ propagating_vgws = [] -> (known after apply)
      ~ route            = [
          - {
              - cidr_block                = "0.0.0.0/0"
              - egress_only_gateway_id    = ""
              - gateway_id                = ""
              - instance_id               = ""
              - ipv6_cidr_block           = ""
              - nat_gateway_id            = "nat-0a1e007645db1ba91"
              - network_interface_id      = ""
              - transit_gateway_id        = ""
              - vpc_peering_connection_id = ""
            },
            {
                cidr_block                = "0.0.0.0/0"
                egress_only_gateway_id    = ""
                gateway_id                = (known after apply)
                instance_id               = ""
                ipv6_cidr_block           = ""
                nat_gateway_id            = ""
                network_interface_id      = ""
                transit_gateway_id        = ""
                vpc_peering_connection_id = ""
            },
        ]
        tags             = {
            "Name" = "RT NGW IaC"
        }
      ~ vpc_id           = "vpc-098eadb6edfa21315" -> (known after apply) # forces replacement
    }

  # aws_route_table.devopsacademy-rt-public-iac must be replaced
-/+ resource "aws_route_table" "devopsacademy-rt-public-iac" {
      ~ id               = "rtb-08d93b0c4df976841" -> (known after apply)
      ~ owner_id         = "148446344264" -> (known after apply)
      ~ propagating_vgws = [] -> (known after apply)
        route            = [
            {
                cidr_block                = "0.0.0.0/0"
                egress_only_gateway_id    = ""
                gateway_id                = "igw-0dbfcd66885bfd101"
                instance_id               = ""
                ipv6_cidr_block           = ""
                nat_gateway_id            = ""
                network_interface_id      = ""
                transit_gateway_id        = ""
                vpc_peering_connection_id = ""
            },
        ]
        tags             = {
            "Name" = "RT IGW IaC"
        }
      ~ vpc_id           = "vpc-098eadb6edfa21315" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.rt_igw_iac[0] must be replaced
-/+ resource "aws_route_table_association" "rt_igw_iac" {
      ~ id             = "rtbassoc-065615003993ea076" -> (known after apply)
      ~ route_table_id = "rtb-08d93b0c4df976841" -> (known after apply)
      ~ subnet_id      = "subnet-0c4500544b1a8d64d" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.rt_igw_iac[1] must be replaced
-/+ resource "aws_route_table_association" "rt_igw_iac" {
      ~ id             = "rtbassoc-0d0ab218b06d7a494" -> (known after apply)
      ~ route_table_id = "rtb-08d93b0c4df976841" -> (known after apply)
      ~ subnet_id      = "subnet-001f5161a76bcb2a6" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.rt_ngw_iac[0] must be replaced
-/+ resource "aws_route_table_association" "rt_ngw_iac" {
      ~ id             = "rtbassoc-09d23b38e9f1a2d55" -> (known after apply)
      ~ route_table_id = "rtb-009f1951a978975c6" -> (known after apply)
      ~ subnet_id      = "subnet-003eb7bec2105b73a" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.rt_ngw_iac[1] must be replaced
-/+ resource "aws_route_table_association" "rt_ngw_iac" {
      ~ id             = "rtbassoc-0ae7b3690f921d29d" -> (known after apply)
      ~ route_table_id = "rtb-009f1951a978975c6" -> (known after apply)
      ~ subnet_id      = "subnet-0357bc1bdea4baf58" -> (known after apply) # forces replacement
    }

  # aws_subnet.private[0] must be replaced
-/+ resource "aws_subnet" "private" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:148446344264:subnet/subnet-003eb7bec2105b73a" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2a"
      ~ availability_zone_id            = "apse2-az3" -> (known after apply)
      ~ cidr_block                      = "10.0.1.0/24" -> "10.255.1.0/24" # forces replacement
      ~ id                              = "subnet-003eb7bec2105b73a" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "148446344264" -> (known after apply)
        tags                            = {
            "Name" = "private-a_iac"
        }
      ~ vpc_id                          = "vpc-098eadb6edfa21315" -> (known after apply) # forces replacement
    }

  # aws_subnet.private[1] must be replaced
-/+ resource "aws_subnet" "private" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:148446344264:subnet/subnet-0357bc1bdea4baf58" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2b"
      ~ availability_zone_id            = "apse2-az1" -> (known after apply)
        cidr_block                      = "10.0.2.0/24"
      ~ id                              = "subnet-0357bc1bdea4baf58" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "148446344264" -> (known after apply)
        tags                            = {
            "Name" = "private-b_iac"
        }
      ~ vpc_id                          = "vpc-098eadb6edfa21315" -> (known after apply) # forces replacement
    }

  # aws_subnet.public[0] must be replaced
-/+ resource "aws_subnet" "public" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:148446344264:subnet/subnet-0c4500544b1a8d64d" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2a"
      ~ availability_zone_id            = "apse2-az3" -> (known after apply)
        cidr_block                      = "10.0.101.0/24"
      ~ id                              = "subnet-0c4500544b1a8d64d" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "148446344264" -> (known after apply)
      ~ tags                            = {
          ~ "Name" = "public-a_iac" -> "subnet-2_iac"
        }
      ~ vpc_id                          = "vpc-098eadb6edfa21315" -> (known after apply) # forces replacement
    }

  # aws_subnet.public[1] must be replaced
-/+ resource "aws_subnet" "public" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:148446344264:subnet/subnet-001f5161a76bcb2a6" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2b"
      ~ availability_zone_id            = "apse2-az1" -> (known after apply)
        cidr_block                      = "10.0.102.0/24"
      ~ id                              = "subnet-001f5161a76bcb2a6" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "148446344264" -> (known after apply)
        tags                            = {
            "Name" = "public-b_iac"
        }
      ~ vpc_id                          = "vpc-098eadb6edfa21315" -> (known after apply) # forces replacement
    }

  # aws_vpc.devopsacademy-vpc-iac must be replaced
-/+ resource "aws_vpc" "devopsacademy-vpc-iac" {
      ~ arn                              = "arn:aws:ec2:ap-southeast-2:148446344264:vpc/vpc-098eadb6edfa21315" -> (known after apply)
        assign_generated_ipv6_cidr_block = false
      ~ cidr_block                       = "10.0.0.0/16" -> "192.0.0.0/16" # forces replacement
      ~ default_network_acl_id           = "acl-0840ad20fcfdfb8c8" -> (known after apply)
      ~ default_route_table_id           = "rtb-0aa3c581dfea231c9" -> (known after apply)
      ~ default_security_group_id        = "sg-05b7d75954a30be13" -> (known after apply)
      ~ dhcp_options_id                  = "dopt-10361177" -> (known after apply)
      ~ enable_classiclink               = false -> (known after apply)
      ~ enable_classiclink_dns_support   = false -> (known after apply)
      ~ enable_dns_hostnames             = false -> (known after apply)
        enable_dns_support               = true
      ~ id                               = "vpc-098eadb6edfa21315" -> (known after apply)
        instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      ~ main_route_table_id              = "rtb-0aa3c581dfea231c9" -> (known after apply)
      ~ owner_id                         = "148446344264" -> (known after apply)
        tags                             = {
            "Name" = "VPC IaC"
        }
    }

Plan: 12 to add, 1 to change, 12 to destroy.

Warning: Quoted type constraints are deprecated

  on variables.tf line 6, in variable "subnets_private_name":
   6:   type = "list"

Terraform 0.11 and earlier required type constraints to be given in quotes,
but that form is now deprecated and will be removed in a future version of
Terraform. To silence this warning, remove the quotes around "list" and write
list(string) instead to explicitly indicate that the list elements are
strings.

(and 5 more similar warnings elsewhere)


Warning: Interpolation-only expressions are deprecated

  on vpc.tf line 3, in resource "aws_vpc" "devopsacademy-vpc-iac":
   3:     cidr_block       = "${var.vpc_cidr}"

Terraform 0.11 and earlier required all non-constant expressions to be
provided via interpolation syntax, but this pattern is now deprecated. To
silence this warning, remove the "${ sequence from the start and the }"
sequence from the end of this expression, leaving just the inner expression.

Template interpolation syntax is still used to construct strings from
expressions when the template includes multiple interpolation sequences or a
mixture of literal strings and interpolations. This deprecation applies only
to templates that consist entirely of a single interpolation sequence.

(and 21 more similar warnings elsewhere)


------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.