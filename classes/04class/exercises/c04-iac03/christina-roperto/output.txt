terraform plan
var.cidr_private_1
  Subnet private 1 cidr

  Enter a value: 10.0.201.0/24

var.cidr_private_2
  Subnet private 2 cidr

  Enter a value: 10.0.103.0/24

var.cidr_public_1
  Subnet public 1 cidr

  Enter a value: 10.0.100.0/24

var.cidr_public_2
  Subnet public 2 cidr

  Enter a value: 10.0.102.0/24

var.cidr_vpc
  CIDR block for the VPC

  Enter a value: 10.0.0.0/17

var.name_private_1
  Subnet private 1 name

  Enter a value: private-sub-ap-southeast-2a

var.name_private_2
  Subnet private 2 name

  Enter a value: private-ap-southeast-2b

var.name_public_1
  Subnet public 1 name

  Enter a value: public-sub-ap-southeast-2a

var.name_public_2
  Subnet public 2 name

  Enter a value: public-sub-ap-southeast-2b

Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.aws_availability_zones.available: Refreshing state...
aws_vpc.devops-iac02: Refreshing state... [id=vpc-06bf63d1ea963398a]
aws_internet_gateway.igw: Refreshing state... [id=igw-0ae0d61d05c40ccbb]
aws_subnet.public[0]: Refreshing state... [id=subnet-0efba42bfa01bb85d]
aws_subnet.public[1]: Refreshing state... [id=subnet-0419043aacf1d7f57]
aws_subnet.private[1]: Refreshing state... [id=subnet-04a0fb8561e7650a2]
aws_subnet.private[0]: Refreshing state... [id=subnet-0b2caf5cde265db96]
aws_route_table.iac02-rt-public: Refreshing state... [id=rtb-0dbfedd253c72b7d1]
aws_eip.devops-iac02: Refreshing state... [id=eipalloc-0b3fe399a48911bb9]
aws_main_route_table_association.public-main: Refreshing state... [id=rtbassoc-00893ef0cb0c6a64c]
aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-0b7147afc6725b2fa]
aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-070632df9fe421a48]
aws_nat_gateway.ngw: Refreshing state... [id=nat-03912f7c69ab44ee0]
aws_route_table.iac02-rt-private: Refreshing state... [id=rtb-027914617fee6030c]
aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-01620de29b6c5ac69]
aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-09843973f4f359b34]

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  ~ update in-place
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # aws_eip.devops-iac02 will be updated in-place
  ~ resource "aws_eip" "devops-iac02" {
      ~ associate_with_private_ip = "subnet-0efba42bfa01bb85d" -> (known after apply)
        association_id            = "eipassoc-ecabc510"
        domain                    = "vpc"
        id                        = "eipalloc-0b3fe399a48911bb9"
        network_interface         = "eni-0b303467e320ab3a0"
        private_dns               = "ip-10-0-100-186.ap-southeast-2.compute.internal"
        private_ip                = "10.0.100.186"
        public_dns                = "ec2-52-62-183-14.ap-southeast-2.compute.amazonaws.com"
        public_ip                 = "52.62.183.14"
        public_ipv4_pool          = "amazon"
        tags                      = {}
        vpc                       = true
    }

  # aws_internet_gateway.igw will be updated in-place
  ~ resource "aws_internet_gateway" "igw" {
        id       = "igw-0ae0d61d05c40ccbb"
        owner_id = "956839463650"
        tags     = {
            "Name" = "devops-iac02-igw"
        }
      ~ vpc_id   = "vpc-06bf63d1ea963398a" -> (known after apply)
    }

  # aws_main_route_table_association.public-main will be updated in-place
  ~ resource "aws_main_route_table_association" "public-main" {
        id                      = "rtbassoc-00893ef0cb0c6a64c"
        original_route_table_id = "rtb-0f7d83f886807d2ba"
      ~ route_table_id          = "rtb-0dbfedd253c72b7d1" -> (known after apply)
      ~ vpc_id                  = "vpc-06bf63d1ea963398a" -> (known after apply)
    }

  # aws_nat_gateway.ngw must be replaced
-/+ resource "aws_nat_gateway" "ngw" {
        allocation_id        = "eipalloc-0b3fe399a48911bb9"
      ~ id                   = "nat-03912f7c69ab44ee0" -> (known after apply)
      ~ network_interface_id = "eni-0b303467e320ab3a0" -> (known after apply)
      ~ private_ip           = "10.0.100.186" -> (known after apply)
      ~ public_ip            = "52.62.183.14" -> (known after apply)
      ~ subnet_id            = "subnet-0efba42bfa01bb85d" -> (known after apply) # forces replacement
        tags                 = {
            "Name" = "gw NAT"
        }
    }

  # aws_route_table.iac02-rt-private must be replaced
-/+ resource "aws_route_table" "iac02-rt-private" {
      ~ id               = "rtb-027914617fee6030c" -> (known after apply)
      ~ owner_id         = "956839463650" -> (known after apply)
      ~ propagating_vgws = [] -> (known after apply)
      ~ route            = [
          - {
              - cidr_block                = "0.0.0.0/0"
              - egress_only_gateway_id    = ""
              - gateway_id                = ""
              - instance_id               = ""
              - ipv6_cidr_block           = ""
              - nat_gateway_id            = "nat-03912f7c69ab44ee0"
              - network_interface_id      = ""
              - transit_gateway_id        = ""
              - vpc_peering_connection_id = ""
            },
            {
                cidr_block                = "0.0.0.0/0"
                egress_only_gateway_id    = ""
                gateway_id                = ""
                instance_id               = ""
                ipv6_cidr_block           = ""
                nat_gateway_id            = (known after apply)
                network_interface_id      = ""
                transit_gateway_id        = ""
                vpc_peering_connection_id = ""
            },
        ]
        tags             = {
            "Name" = "iac02-rt-private"
        }
      ~ vpc_id           = "vpc-06bf63d1ea963398a" -> (known after apply) # forces replacement
    }

  # aws_route_table.iac02-rt-public must be replaced
-/+ resource "aws_route_table" "iac02-rt-public" {
      ~ id               = "rtb-0dbfedd253c72b7d1" -> (known after apply)
      ~ owner_id         = "956839463650" -> (known after apply)
      ~ propagating_vgws = [] -> (known after apply)
        route            = [
            {
                cidr_block                = "0.0.0.0/0"
                egress_only_gateway_id    = ""
                gateway_id                = "igw-0ae0d61d05c40ccbb"
                instance_id               = ""
                ipv6_cidr_block           = ""
                nat_gateway_id            = ""
                network_interface_id      = ""
                transit_gateway_id        = ""
                vpc_peering_connection_id = ""
            },
        ]
        tags             = {
            "Name" = "iac02-rt-public"
        }
      ~ vpc_id           = "vpc-06bf63d1ea963398a" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.private[0] must be replaced
-/+ resource "aws_route_table_association" "private" {
      ~ id             = "rtbassoc-01620de29b6c5ac69" -> (known after apply)
      ~ route_table_id = "rtb-027914617fee6030c" -> (known after apply)
      ~ subnet_id      = "subnet-0b2caf5cde265db96" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.private[1] must be replaced
-/+ resource "aws_route_table_association" "private" {
      ~ id             = "rtbassoc-09843973f4f359b34" -> (known after apply)
      ~ route_table_id = "rtb-027914617fee6030c" -> (known after apply)
      ~ subnet_id      = "subnet-04a0fb8561e7650a2" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.public[0] must be replaced
-/+ resource "aws_route_table_association" "public" {
      ~ id             = "rtbassoc-070632df9fe421a48" -> (known after apply)
      ~ route_table_id = "rtb-0dbfedd253c72b7d1" -> (known after apply)
      ~ subnet_id      = "subnet-0efba42bfa01bb85d" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.public[1] must be replaced
-/+ resource "aws_route_table_association" "public" {
      ~ id             = "rtbassoc-0b7147afc6725b2fa" -> (known after apply)
      ~ route_table_id = "rtb-0dbfedd253c72b7d1" -> (known after apply)
      ~ subnet_id      = "subnet-0419043aacf1d7f57" -> (known after apply) # forces replacement
    }

  # aws_subnet.private[0] must be replaced
-/+ resource "aws_subnet" "private" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:956839463650:subnet/subnet-0b2caf5cde265db96" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2a"
      ~ availability_zone_id            = "apse2-az1" -> (known after apply)
      ~ cidr_block                      = "10.0.101.0/24" -> "10.0.201.0/24" # forces replacement
      ~ id                              = "subnet-0b2caf5cde265db96" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "956839463650" -> (known after apply)
        tags                            = {
            "Name" = "private-sub-ap-southeast-2a"
        }
      ~ vpc_id                          = "vpc-06bf63d1ea963398a" -> (known after apply) # forces replacement
    }

  # aws_subnet.private[1] must be replaced
-/+ resource "aws_subnet" "private" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:956839463650:subnet/subnet-04a0fb8561e7650a2" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2b"
      ~ availability_zone_id            = "apse2-az3" -> (known after apply)
        cidr_block                      = "10.0.103.0/24"
      ~ id                              = "subnet-04a0fb8561e7650a2" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "956839463650" -> (known after apply)
      ~ tags                            = {
          ~ "Name" = "private-sub-ap-southeast-2b" -> "private-ap-southeast-2b"
        }
      ~ vpc_id                          = "vpc-06bf63d1ea963398a" -> (known after apply) # forces replacement
    }

  # aws_subnet.public[0] must be replaced
-/+ resource "aws_subnet" "public" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:956839463650:subnet/subnet-0efba42bfa01bb85d" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2a"
      ~ availability_zone_id            = "apse2-az1" -> (known after apply)
        cidr_block                      = "10.0.100.0/24"
      ~ id                              = "subnet-0efba42bfa01bb85d" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "956839463650" -> (known after apply)
        tags                            = {
            "Name" = "public-sub-ap-southeast-2a"
        }
      ~ vpc_id                          = "vpc-06bf63d1ea963398a" -> (known after apply) # forces replacement
    }

  # aws_subnet.public[1] must be replaced
-/+ resource "aws_subnet" "public" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:956839463650:subnet/subnet-0419043aacf1d7f57" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2b"
      ~ availability_zone_id            = "apse2-az3" -> (known after apply)
        cidr_block                      = "10.0.102.0/24"
      ~ id                              = "subnet-0419043aacf1d7f57" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "956839463650" -> (known after apply)
        tags                            = {
            "Name" = "public-sub-ap-southeast-2b"
        }
      ~ vpc_id                          = "vpc-06bf63d1ea963398a" -> (known after apply) # forces replacement
    }

  # aws_vpc.devops-iac02 must be replaced
-/+ resource "aws_vpc" "devops-iac02" {
      ~ arn                              = "arn:aws:ec2:ap-southeast-2:956839463650:vpc/vpc-06bf63d1ea963398a" -> (known after apply)
        assign_generated_ipv6_cidr_block = false
      ~ cidr_block                       = "10.0.0.0/16" -> "10.0.0.0/17" # forces replacement
      ~ default_network_acl_id           = "acl-0213beb1b63291544" -> (known after apply)
      ~ default_route_table_id           = "rtb-0dbfedd253c72b7d1" -> (known after apply)
      ~ default_security_group_id        = "sg-0cf371c4d1f1e80d8" -> (known after apply)
      ~ dhcp_options_id                  = "dopt-6d61440a" -> (known after apply)
      ~ enable_classiclink               = false -> (known after apply)
      ~ enable_classiclink_dns_support   = false -> (known after apply)
        enable_dns_hostnames             = true
        enable_dns_support               = true
      ~ id                               = "vpc-06bf63d1ea963398a" -> (known after apply)
        instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      ~ main_route_table_id              = "rtb-0dbfedd253c72b7d1" -> (known after apply)
      ~ owner_id                         = "956839463650" -> (known after apply)
        tags                             = {
            "Name" = "devops-iac02-vpc"
        }
    }

Plan: 12 to add, 3 to change, 12 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.