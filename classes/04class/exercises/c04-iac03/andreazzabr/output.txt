anderson@andreazza:~/terras/c04-iac02$ terraform plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

aws_vpc.main: Refreshing state... [id=vpc-02fb02425d59a4fd6]
aws_subnet.public-subs[0]: Refreshing state... [id=subnet-00fe63a7b5345cfad]
aws_subnet.private-subs[0]: Refreshing state... [id=subnet-08e9f93a499daf162]
aws_subnet.public-subs[1]: Refreshing state... [id=subnet-0892d3113c048368a]
aws_internet_gateway.igw: Refreshing state... [id=igw-0e2acb0c6064c66bb]
aws_subnet.private-subs[1]: Refreshing state... [id=subnet-09c97232e2266e32d]
aws_route_table.rt: Refreshing state... [id=rtb-0e34b220656fd71f9]
aws_route_table_association.publicsubnets[1]: Refreshing state... [id=rtbassoc-07158a0c1eb7085ae]
aws_route_table_association.publicsubnets[0]: Refreshing state... [id=rtbassoc-08c773e834d9c9168]

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  ~ update in-place
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be updated in-place
  ~ resource "aws_internet_gateway" "igw" {
        id       = "igw-0e2acb0c6064c66bb"
        owner_id = "048355378787"
        tags     = {
            "Name" = "devops-igw"
        }
      ~ vpc_id   = "vpc-02fb02425d59a4fd6" -> (known after apply)
    }

  # aws_route_table.rt must be replaced
-/+ resource "aws_route_table" "rt" {
      ~ id               = "rtb-0e34b220656fd71f9" -> (known after apply)
      ~ owner_id         = "048355378787" -> (known after apply)
      ~ propagating_vgws = [] -> (known after apply)
        route            = [
            {
                cidr_block                = "0.0.0.0/0"
                egress_only_gateway_id    = ""
                gateway_id                = "igw-0e2acb0c6064c66bb"
                instance_id               = ""
                ipv6_cidr_block           = ""
                nat_gateway_id            = ""
                network_interface_id      = ""
                transit_gateway_id        = ""
                vpc_peering_connection_id = ""
            },
        ]
        tags             = {
            "Name" = "main route"
        }
      ~ vpc_id           = "vpc-02fb02425d59a4fd6" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.publicsubnets[0] must be replaced
-/+ resource "aws_route_table_association" "publicsubnets" {
      ~ id             = "rtbassoc-08c773e834d9c9168" -> (known after apply)
      ~ route_table_id = "rtb-0e34b220656fd71f9" -> (known after apply)
      ~ subnet_id      = "subnet-00fe63a7b5345cfad" -> (known after apply) # forces replacement
    }

  # aws_route_table_association.publicsubnets[1] must be replaced
-/+ resource "aws_route_table_association" "publicsubnets" {
      ~ id             = "rtbassoc-07158a0c1eb7085ae" -> (known after apply)
      ~ route_table_id = "rtb-0e34b220656fd71f9" -> (known after apply)
      ~ subnet_id      = "subnet-0892d3113c048368a" -> (known after apply) # forces replacement
    }

  # aws_subnet.private-subs[0] must be replaced
-/+ resource "aws_subnet" "private-subs" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:048355378787:subnet/subnet-08e9f93a499daf162" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2a"
      ~ availability_zone_id            = "apse2-az1" -> (known after apply)
        cidr_block                      = "10.0.11.0/24"
      ~ id                              = "subnet-08e9f93a499daf162" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "048355378787" -> (known after apply)
      ~ tags                            = {
          ~ "Name" = "private-a" -> "privateo-a"
        }
      ~ vpc_id                          = "vpc-02fb02425d59a4fd6" -> (known after apply) # forces replacement
    }

  # aws_subnet.private-subs[1] must be replaced
-/+ resource "aws_subnet" "private-subs" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:048355378787:subnet/subnet-09c97232e2266e32d" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2b"
      ~ availability_zone_id            = "apse2-az3" -> (known after apply)
        cidr_block                      = "10.0.21.0/24"
      ~ id                              = "subnet-09c97232e2266e32d" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = false
      ~ owner_id                        = "048355378787" -> (known after apply)
      ~ tags                            = {
          ~ "Name" = "private-b" -> "privateo-b"
        }
      ~ vpc_id                          = "vpc-02fb02425d59a4fd6" -> (known after apply) # forces replacement
    }

  # aws_subnet.public-subs[0] must be replaced
-/+ resource "aws_subnet" "public-subs" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:048355378787:subnet/subnet-00fe63a7b5345cfad" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2a"
      ~ availability_zone_id            = "apse2-az1" -> (known after apply)
      ~ cidr_block                      = "10.0.10.0/24" -> "12.0.10.0/24" # forces replacement
      ~ id                              = "subnet-00fe63a7b5345cfad" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = true
      ~ owner_id                        = "048355378787" -> (known after apply)
        tags                            = {
            "Name" = "public-a"
        }
      ~ vpc_id                          = "vpc-02fb02425d59a4fd6" -> (known after apply) # forces replacement
    }

  # aws_subnet.public-subs[1] must be replaced
-/+ resource "aws_subnet" "public-subs" {
      ~ arn                             = "arn:aws:ec2:ap-southeast-2:048355378787:subnet/subnet-0892d3113c048368a" -> (known after apply)
        assign_ipv6_address_on_creation = false
        availability_zone               = "ap-southeast-2b"
      ~ availability_zone_id            = "apse2-az3" -> (known after apply)
      ~ cidr_block                      = "10.0.20.0/24" -> "12.0.20.0/24" # forces replacement
      ~ id                              = "subnet-0892d3113c048368a" -> (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
        map_public_ip_on_launch         = true
      ~ owner_id                        = "048355378787" -> (known after apply)
        tags                            = {
            "Name" = "public-b"
        }
      ~ vpc_id                          = "vpc-02fb02425d59a4fd6" -> (known after apply) # forces replacement
    }

  # aws_vpc.main must be replaced
-/+ resource "aws_vpc" "main" {
      ~ arn                              = "arn:aws:ec2:ap-southeast-2:048355378787:vpc/vpc-02fb02425d59a4fd6" -> (known after apply)
        assign_generated_ipv6_cidr_block = false
      ~ cidr_block                       = "10.0.0.0/16" -> "12.0.0.0/16" # forces replacement
      ~ default_network_acl_id           = "acl-02e92de79b4c17700" -> (known after apply)
      ~ default_route_table_id           = "rtb-0c5d3581671466f4b" -> (known after apply)
      ~ default_security_group_id        = "sg-0a425134d83a8501d" -> (known after apply)
      ~ dhcp_options_id                  = "dopt-464a6d21" -> (known after apply)
      ~ enable_classiclink               = false -> (known after apply)
      ~ enable_classiclink_dns_support   = false -> (known after apply)
        enable_dns_hostnames             = true
        enable_dns_support               = true
      ~ id                               = "vpc-02fb02425d59a4fd6" -> (known after apply)
        instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      ~ main_route_table_id              = "rtb-0c5d3581671466f4b" -> (known after apply)
      ~ owner_id                         = "048355378787" -> (known after apply)
      - tags                             = {} -> null
    }

Plan: 8 to add, 1 to change, 8 to destroy.

------------------------------------------------------------------------
