# command
    terraform plan -var-file=main.tfvars -out=plan

# Output
    Refreshing Terraform state in-memory prior to plan...
    The refreshed state will be used to calculate this plan, but will not be
    persisted to local or remote state storage.


    ------------------------------------------------------------------------

    An execution plan has been generated and is shown below.
    Resource actions are indicated with the following symbols:
    + create

    Terraform will perform the following actions:

    # aws_internet_gateway.devopsacademy-igw-iac will be created
    + resource "aws_internet_gateway" "devopsacademy-igw-iac" {
        + id       = (known after apply)
        + owner_id = (known after apply)
        + tags     = {
            + "Name" = "IGW IaC"
            }
        + vpc_id   = (known after apply)
        }

    # aws_nat_gateway.devopsacademy-ngw-iac[0] will be created
    + resource "aws_nat_gateway" "devopsacademy-ngw-iac" {
        + allocation_id        = "eipalloc-03d06ab06d9e8c6a3"
        + id                   = (known after apply)
        + network_interface_id = (known after apply)
        + private_ip           = (known after apply)
        + public_ip            = (known after apply)
        + subnet_id            = (known after apply)
        + tags                 = {
            + "Name" = "NGW IaC-1"
            }
        }

    # aws_nat_gateway.devopsacademy-ngw-iac[1] will be created
    + resource "aws_nat_gateway" "devopsacademy-ngw-iac" {
        + allocation_id        = "eipalloc-03d06ab06d9e8c6a3"
        + id                   = (known after apply)
        + network_interface_id = (known after apply)
        + private_ip           = (known after apply)
        + public_ip            = (known after apply)
        + subnet_id            = (known after apply)
        + tags                 = {
            + "Name" = "NGW IaC-2"
            }
        }

    # aws_route_table.devopsacademy-rt-private-iac[0] will be created
    + resource "aws_route_table" "devopsacademy-rt-private-iac" {
        + id               = (known after apply)
        + owner_id         = (known after apply)
        + propagating_vgws = (known after apply)
        + route            = [
            + {
                + cidr_block                = "0.0.0.0/0"
                + egress_only_gateway_id    = ""
                + gateway_id                = (known after apply)
                + instance_id               = ""
                + ipv6_cidr_block           = ""
                + nat_gateway_id            = ""
                + network_interface_id      = ""
                + transit_gateway_id        = ""
                + vpc_peering_connection_id = ""
                },
            ]
        + tags             = {
            + "Name" = "RT NGW IaC-1"
            }
        + vpc_id           = (known after apply)
        }

    # aws_route_table.devopsacademy-rt-private-iac[1] will be created
    + resource "aws_route_table" "devopsacademy-rt-private-iac" {
        + id               = (known after apply)
        + owner_id         = (known after apply)
        + propagating_vgws = (known after apply)
        + route            = [
            + {
                + cidr_block                = "0.0.0.0/0"
                + egress_only_gateway_id    = ""
                + gateway_id                = (known after apply)
                + instance_id               = ""
                + ipv6_cidr_block           = ""
                + nat_gateway_id            = ""
                + network_interface_id      = ""
                + transit_gateway_id        = ""
                + vpc_peering_connection_id = ""
                },
            ]
        + tags             = {
            + "Name" = "RT NGW IaC-2"
            }
        + vpc_id           = (known after apply)
        }

    # aws_route_table.devopsacademy-rt-public-iac will be created
    + resource "aws_route_table" "devopsacademy-rt-public-iac" {
        + id               = (known after apply)
        + owner_id         = (known after apply)
        + propagating_vgws = (known after apply)
        + route            = [
            + {
                + cidr_block                = "0.0.0.0/0"
                + egress_only_gateway_id    = ""
                + gateway_id                = (known after apply)
                + instance_id               = ""
                + ipv6_cidr_block           = ""
                + nat_gateway_id            = ""
                + network_interface_id      = ""
                + transit_gateway_id        = ""
                + vpc_peering_connection_id = ""
                },
            ]
        + tags             = {
            + "Name" = "RT IGW IaC"
            }
        + vpc_id           = (known after apply)
        }

    # aws_route_table_association.rt_igw_iac[0] will be created
    + resource "aws_route_table_association" "rt_igw_iac" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
        }

    # aws_route_table_association.rt_igw_iac[1] will be created
    + resource "aws_route_table_association" "rt_igw_iac" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
        }

    # aws_route_table_association.rt_ngw_iac[0] will be created
    + resource "aws_route_table_association" "rt_ngw_iac" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
        }

    # aws_route_table_association.rt_ngw_iac[1] will be created
    + resource "aws_route_table_association" "rt_ngw_iac" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
        }

    # aws_subnet.private[0] will be created
    + resource "aws_subnet" "private" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2a"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.1.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = false
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "private-a_iac"
            }
        + vpc_id                          = (known after apply)
        }

    # aws_subnet.private[1] will be created
    + resource "aws_subnet" "private" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2b"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.2.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = false
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "private-b_iac"
            }
        + vpc_id                          = (known after apply)
        }

    # aws_subnet.public[0] will be created
    + resource "aws_subnet" "public" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2a"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.101.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = false
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "public-a_iac"
            }
        + vpc_id                          = (known after apply)
        }

    # aws_subnet.public[1] will be created
    + resource "aws_subnet" "public" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2b"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.102.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = false
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "public-b_iac"
            }
        + vpc_id                          = (known after apply)
        }

    # aws_vpc.devopsacademy-vpc-iac will be created
    + resource "aws_vpc" "devopsacademy-vpc-iac" {
        + arn                              = (known after apply)
        + assign_generated_ipv6_cidr_block = false
        + cidr_block                       = "10.0.0.0/16"
        + default_network_acl_id           = (known after apply)
        + default_route_table_id           = (known after apply)
        + default_security_group_id        = (known after apply)
        + dhcp_options_id                  = (known after apply)
        + enable_classiclink               = (known after apply)
        + enable_classiclink_dns_support   = (known after apply)
        + enable_dns_hostnames             = (known after apply)
        + enable_dns_support               = true
        + id                               = (known after apply)
        + instance_tenancy                 = "default"
        + ipv6_association_id              = (known after apply)
        + ipv6_cidr_block                  = (known after apply)
        + main_route_table_id              = (known after apply)
        + owner_id                         = (known after apply)
        + tags                             = {
            + "Name" = "VPC IaC"
            }
        }

    Plan: 15 to add, 0 to change, 0 to destroy.

    Warning: Quoted type constraints are deprecated

    on variables.tf line 6, in variable "subnets_private_name":
    6: 	type = "list"

    Terraform 0.11 and earlier required type constraints to be given in quotes,
    but that form is now deprecated and will be removed in a future version of
    Terraform. To silence this warning, remove the quotes around "list" and write
    list(string) instead to explicitly indicate that the list elements are
    strings.

    (and 4 more similar warnings elsewhere)


    Warning: Interpolation-only expressions are deprecated

    on vpc.tf line 3, in resource "aws_vpc" "devopsacademy-vpc-iac":
    3:     cidr_block       = "${var.vpc_cidr}"

    Terraform 0.11 and earlier required all non-constant expressions to be
    provided via interpolation syntax, but this pattern is now deprecated. To
    silence this warning, remove the "${ sequence from the start and the }"
    sequence from the end of this expression, leaving just the inner expression.

    Template interpolation syntax is still used to construct strings from
    expressions when the template includes multiple interpolation sequences or a
    mixture of literal strings and interpolations. This deprecation applies only
    to templates that consist entirely of a single interpolation sequence.

    (and 23 more similar warnings elsewhere)


    ------------------------------------------------------------------------

    This plan was saved to: plan

    To perform exactly these actions, run the following command to apply:
        terraform apply "plan"
