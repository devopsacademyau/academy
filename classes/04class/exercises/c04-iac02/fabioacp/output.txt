fabiopereira in academy/classes/04class/exercises/c04-iac02/fabioacp on  fabioacp/c04-iac02 [?] 
❯ terraform init                                            

Initializing the backend...

Initializing provider plugins...

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.


❯ terraform plan -var-file="main.tfvars" -out c04-iac02-plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + customer_owned_ip = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + tags              = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "devopsacademy-ap-southeast-2a"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc               = true
    }

  # aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "devopsacademy-ig"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "devopsacademy-ap-southeast-2a"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
    }

  # aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "devopsacademy-private"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "devopsacademy-public"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.2.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "private-sb1-ap-southeast-2a"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.4.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "private-sb2-ap-southeast-2b"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.1.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "public-sb1-ap-southeast-2a"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.3.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "public-sb2-ap-southeast-2b"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.this will be created
  + resource "aws_vpc" "this" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.0.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = true
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "BillingCode" = "0800"
          + "Environment" = "DEV"
          + "Name"        = "devopsacademy-iac"
          + "Owner"       = "FACP"
          + "Project"     = "C04-iac02"
        }
    }

Plan: 14 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

This plan was saved to: c04-iac02-plan

To perform exactly these actions, run the following command to apply:
    terraform apply "c04-iac02-plan"

fabiopereira in academy/classes/04class/exercises/c04-iac02/fabioacp on  fabioacp/c04-iac02 [!?] took 4s 
❯ terraform apply "c04-iac02-plan"
aws_vpc.this: Creating...
aws_eip.nat[0]: Creating...
aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-0bf62a9825bc25784]
aws_vpc.this: Creation complete after 2s [id=vpc-0ab385eb2835e38bc]
aws_internet_gateway.this[0]: Creating...
aws_route_table.public[0]: Creating...
aws_route_table.private[0]: Creating...
aws_subnet.private[1]: Creating...
aws_subnet.private[0]: Creating...
aws_subnet.public[0]: Creating...
aws_subnet.public[1]: Creating...
aws_route_table.public[0]: Creation complete after 0s [id=rtb-0a198f7cdf8f7d611]
aws_route_table.private[0]: Creation complete after 0s [id=rtb-0c18afb1923a12f22]
aws_internet_gateway.this[0]: Creation complete after 1s [id=igw-089b764008e036521]
aws_subnet.private[1]: Creation complete after 1s [id=subnet-0209d154770952a3b]
aws_subnet.private[0]: Creation complete after 1s [id=subnet-04ef5695a4b3efd3b]
aws_route_table_association.private[1]: Creating...
aws_route_table_association.private[0]: Creating...
aws_subnet.public[1]: Creation complete after 1s [id=subnet-03630e2f3f994fc50]
aws_subnet.public[0]: Creation complete after 1s [id=subnet-08bfb1d0292dc941e]
aws_route_table_association.public[0]: Creating...
aws_route_table_association.public[1]: Creating...
aws_nat_gateway.this[0]: Creating...
aws_route_table_association.private[1]: Creation complete after 0s [id=rtbassoc-04c38fccff3ffb0f0]
aws_route_table_association.private[0]: Creation complete after 0s [id=rtbassoc-095127e6fe8ca70cb]
aws_route_table_association.public[0]: Creation complete after 0s [id=rtbassoc-0032b8ca7d25c4915]
aws_route_table_association.public[1]: Creation complete after 0s [id=rtbassoc-06d8faed1a7c22f63]
aws_nat_gateway.this[0]: Still creating... [10s elapsed]
aws_nat_gateway.this[0]: Still creating... [20s elapsed]
aws_nat_gateway.this[0]: Still creating... [30s elapsed]
aws_nat_gateway.this[0]: Still creating... [40s elapsed]
aws_nat_gateway.this[0]: Still creating... [50s elapsed]
aws_nat_gateway.this[0]: Still creating... [1m0s elapsed]
aws_nat_gateway.this[0]: Still creating... [1m10s elapsed]
aws_nat_gateway.this[0]: Still creating... [1m20s elapsed]
aws_nat_gateway.this[0]: Still creating... [1m30s elapsed]
aws_nat_gateway.this[0]: Creation complete after 1m35s [id=nat-0bea9e7776c6152fe]

Apply complete! Resources: 14 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the `terraform show` command.

State path: terraform.tfstate

Outputs:

private_subnets = [
  {
    "cidr" = "10.0.2.0/24"
    "name" = "private-sb1-ap-southeast-2a"
  },
  {
    "cidr" = "10.0.4.0/24"
    "name" = "private-sb2-ap-southeast-2b"
  },
]
public_subnets = [
  {
    "cidr" = "10.0.1.0/24"
    "name" = "public-sb1-ap-southeast-2a"
  },
  {
    "cidr" = "10.0.3.0/24"
    "name" = "public-sb2-ap-southeast-2b"
  },
]
vpc_id = vpc-0ab385eb2835e38bc