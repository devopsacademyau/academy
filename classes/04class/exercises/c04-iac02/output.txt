
t@photon-machine [ ~/academy/classes/04class/exercises/c04-iac02 ]# terraform apply
data.aws_availability_zones.iac-azs: Refreshing state...

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_default_route_table.private-access will be created
  + resource "aws_default_route_table" "private-access" {
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Name" = "devopsa-default-route"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_eip.devops-iac-eip will be created
  + resource "aws_eip" "devops-iac-eip" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + vpc               = true
    }

  # aws_internet_gateway.devops-terra-igw will be created
  + resource "aws_internet_gateway" "devops-terra-igw" {
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "terra-igw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.devops-terra-nat will be created
  + resource "aws_nat_gateway" "devops-terra-nat" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "devops-iac-nat"
        }
    }

  # aws_route_table.public-access will be created
  + resource "aws_route_table" "public-access" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = (known after apply)
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = ""
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.private-access-a-rt will be created
  + resource "aws_route_table_association" "private-access-a-rt" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.private-access-b-rt will be created
  + resource "aws_route_table_association" "private-access-b-rt" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public-access-a-rt will be created
  + resource "aws_route_table_association" "public-access-a-rt" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public-access-b-rt will be created
  + resource "aws_route_table_association" "public-access-b-rt" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_subnet.private-iac-a will be created
  + resource "aws_subnet" "private-iac-a" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.63.0/18"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "private-subnet-a"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.private-iac-b will be created
  + resource "aws_subnet" "private-iac-b" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2c"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.127.0/18"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "private-subnet-b"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public-iac-a will be created
  + resource "aws_subnet" "public-iac-a" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.191.0/18"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "public-subnet-a"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public-iac-b will be created
  + resource "aws_subnet" "public-iac-b" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.255.0/18"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "public-subnet-b"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.devopsacademy-iac will be created
  + resource "aws_vpc" "devopsacademy-iac" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.0.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = true
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name" = "devopsacademy-vpc-iac"
        }
    }

Plan: 14 to add, 0 to change, 0 to destroy.




Outputs:

private_subnet-a = [
  "subnet-05e1b0d68a61146b0",
]
private_subnet-b = [
  "subnet-03d81df056966bbe4",
]
public_subnet-a = [
  "subnet-0b60775d9929cbc47",
]
public_subnet-b = [
  "subnet-08fef70fc8a885668",
]
vpc_id = vpc-0b0371f19b3b71aa8

