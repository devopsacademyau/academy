anderson@andreazza:~/terras/c04-iac02$ terraform apply -var-file=main.tfvars

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "devops-igw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_route_table.rt will be created
  + resource "aws_route_table" "rt" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = (known after apply)
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = ""
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "main route"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.publicsubnets[0] will be created
  + resource "aws_route_table_association" "publicsubnets" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.publicsubnets[1] will be created
  + resource "aws_route_table_association" "publicsubnets" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_subnet.private-subs[0] will be created
  + resource "aws_subnet" "private-subs" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.11.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "private-a"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.private-subs[1] will be created
  + resource "aws_subnet" "private-subs" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.21.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "private-b"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public-subs[0] will be created
  + resource "aws_subnet" "public-subs" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.10.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "public-a"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_subnet.public-subs[1] will be created
  + resource "aws_subnet" "public-subs" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "ap-southeast-2b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "10.0.20.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "public-b"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.0.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = true
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
    }

Plan: 9 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-066393c0f5b065787]
aws_internet_gateway.igw: Creating...
aws_subnet.public-subs[1]: Creating...
aws_subnet.private-subs[0]: Creating...
aws_subnet.private-subs[1]: Creating...
aws_subnet.public-subs[0]: Creating...
aws_subnet.private-subs[0]: Creation complete after 1s [id=subnet-0f95b218e1366a11b]
aws_subnet.private-subs[1]: Creation complete after 1s [id=subnet-04809e56701c1c9cc]
aws_internet_gateway.igw: Creation complete after 1s [id=igw-0c467f522ae4e6cd3]
aws_route_table.rt: Creating...
aws_subnet.public-subs[0]: Creation complete after 2s [id=subnet-00d893c1cb01e699f]
aws_subnet.public-subs[1]: Creation complete after 2s [id=subnet-063457515aaa3b5ad]
aws_route_table.rt: Creation complete after 2s [id=rtb-01b3fb64f10ce7ee0]
aws_route_table_association.publicsubnets[0]: Creating...
aws_route_table_association.publicsubnets[1]: Creating...
aws_route_table_association.publicsubnets[1]: Creation complete after 0s [id=rtbassoc-01dcfe55ac068793f]
aws_route_table_association.publicsubnets[0]: Creation complete after 0s [id=rtbassoc-07e9337a9b94423fd]

Apply complete! Resources: 9 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the `terraform show` command.

State path: /home/anderson/terras/c04-iac02/terraform.tfstate
anderson@andreazza:~/terras/c04-iac02$ 
