AWS VPC + subnets
Commit all your answers to a text file c02-network12.txt under your folder name.

Everything is to be done preferable on Sydney region ap-southeast-2

VPC Peering
Once you have your custom VPC + subnets + nacls + security groups in place and tested (up to exercise c02-network-11 completed), pair with someone else and create a VPC peering within your vpc's.

Few wording assumed from now:

your vpc = origin vpc
someone else vpc = target vpc
Deliverables
explain how was the process to create a VPC peering
add routes from origin VPC to target VPC - only for private subnets
open any network ACL to allow the connection within the subnets -- try to only open the mininum required
from an instance in one vpc, SSH to the other instance (will have to share the ssh keys, create a new one just for this exercise -- pay attention to security)
open any security group to allow the SSH within the instances
explain any learnings from this process
References
What is a VPC Peering and How to do it?

--------------------------------------------------

I created new VPC with IP 192.168.0.0/16 so it doesn't overlap with Luiz's CIDR block. Created public and private subnet, internet gateway and verify NACLs and security group is allowing all (I know it's not ideal but at this point I just wanted to make sure we can ping each other's IP)
Clicked Peering Connection with Luiz's account ID and his IP which is 10.0.0.0/16
Luiz accepted my request and peering connection status is now active
Realised I needed to create an EC2 instance. So I created one and assign my public subnet and assign IP within the subnet
connecting to my instance using ssh: ssh -i "ChristinaAWS.pem" ec2-user@13.239.56.8
pinged 10.0.1.251 (Luiz's instance), had trouble before but I think he modified his security group and I managed to ping it 

[ec2-user@ip-192-168-0-248 ~]$ ping 10.0.1.251
PING 10.0.1.251 (10.0.1.251) 56(84) bytes of data.
64 bytes from 10.0.1.251: icmp_seq=1 ttl=255 time=1.21 ms
64 bytes from 10.0.1.251: icmp_seq=2 ttl=255 time=1.28 ms
64 bytes from 10.0.1.251: icmp_seq=3 ttl=255 time=1.24 ms
64 bytes from 10.0.1.251: icmp_seq=4 ttl=255 time=1.20 ms
64 bytes from 10.0.1.251: icmp_seq=5 ttl=255 time=1.26 ms


Went to my ssh folder (cd .ssh) and got my public key (cat authorized_keys) passed my public key to Luiz through slack. 
Got Luiz's public key and save it on my authorized_keys using vim so he could access my machine

At this point I coudn't ssh to Luiz's machine through my EC2 as I didn't pass my key pair so I typed exit and reconnect by passing my private key through forwarding agent
ssh -A -i "ChristinaAWS.pem" ec2-user@13.239.56.8
and then connect to Luiz's machine by typing: ssh ec2-user@10.0.1.251

I'm sorry I forgot to copy the result at this point but I was able to connect to his machine and created a file "chris_was_here". Let me know if there's anything unclear :)

Ps: We didn't really use the best practice for the security group as our main objective was to be able to connect to each other's machine first and then later tighten the security later once they are connected however because of the time constraints we didn't get back to restrict it.