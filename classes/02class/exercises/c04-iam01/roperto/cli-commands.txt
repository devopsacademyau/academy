$ export AWS_DEFAULT_OUTPUT=text

$ USER=$(aws iam create-user --user-name user_readonly_S3 --query User.UserName)
$ echo $USER
user_readonly_S3

$ POLICY=$(aws iam create-policy --policy-name S3ReadOnly --policy-document file://S3readOnly.json --query Policy.Arn)
$ echo $POLICY
arn:aws:iam::073145331885:policy/S3ReadOnly

$ aws iam attach-user-policy --policy-arn $POLICY --user-name $USER
$ KEY_JSON=$(aws iam create-access-key --user-name $USER --output json)
$ KEY=$(echo "$KEY_JSON" | jq '.AccessKey.AccessKeyId' -r)
$ SECRET=$(echo "$KEY_JSON" | jq '.AccessKey.SecretAccessKey' -r)
$ unset KEY_JSON

# Unfortunately I could not find a way to user "aws configure" non-interactive.
$ PROFILE=S3ReadOnlyProfile
$ echo "
[${PROFILE}]
aws_access_key_id = ${KEY}
aws_secret_access_key = ${SECRET}
" >> ~/.aws/credentials
$ unset SECRET

$ awsp $PROFILE # that's my own alias -- does some stuff but most important sets AWS_PROFILE environment
AWS Profile changed to: S3ReadOnlyProfile

$ aws s3 ls
2020-06-17 22:37:07 devops.theeroperto.com
2020-03-16 10:58:36 terraform-backend.theeroperto.com

$ awsp daniel
AWS Profile changed to: daniel

# Cleanup
$ aws iam detach-user-policy --policy-arn $POLICY --user-name $USER
$ aws iam delete-policy --policy-arn $POLICY
$ aws iam delete-access-key --user-name $USER --access-key-id $KEY
$ aws iam delete-user --user-name $USER
$ vim ~/.aws/credentials # manual cleanup
